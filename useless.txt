
void printChessBoard(){

    /*
    for (int y = 0; y < SIZE_BOARD; y++)
    {
        printf("----");               
    }
    printf("\n"); 
    
    for (int i = 0; i < SIZE_BOARD; i++)
    {
        for (int y = 0; y < SIZE_BOARD; y++)
        {
            printf("| ");            
            printf("%c ", chessBoard[i][y]);            
        }
        printf("|\n");            

        for (int y = 0; y < SIZE_BOARD; y++)
        {
            printf("----");               
        }
        printf("\n");            
    }
    */
}

    /*
    char** chessBoard = NULL;
    if ((chessBoard = (char**)malloc(sizeof(char*) * SIZE_BOARD)) == NULL)
    {
        fprintf(stdout, "ERREUR : Allocation dynamique d'un pointeur a échoué");
        exit(EXIT_FAILURE);
    }
    for (int i = 0; i < SIZE_BOARD; i++)
    {
        if ((chessBoard[i] = (char*)malloc(sizeof(char) * SIZE_BOARD)) == NULL)
        {
            fprintf(stdout, "ERREUR : Allocation dynamique d'un pointeur a échoué");
            exit(EXIT_FAILURE);
        }
    }
    */

    //Faire les fonction implémentant la boucle de jeu primaire : ResetBoard, MoveNormalPawn, PrintBoard

    //chessBoard[0][0] = 'x';
    //printf("Cool: %c\n", chessBoard[0][0]);

    //resetChessBoard(chessBoard);
    //moveNormalPawn(myTestPawn.cordX, myTestPawn.cordY, &myTestPawn);

    //printf("Cordonnées de mon pawn test : %d et %d\n", myTestPawn.cordX, myTestPawn.cordY);
    //
    //Besoin de réattribuer mon test pawn à pawnArray à chaque mouvement
    //Possible de le faire automatiquement dans la fonction
    //
    //pawnArray[0] = myTestPawn;


    //spawnChessPawn(chessBoard, pawnArray);
    //printChessBoard(chessBoard);
    
    

    //printChessboard(chessboard);